server.port = 8080
#spring.h2.console.enabled=true

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

#spring.datasource.url=jdbc:h2:mem:resortdb

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/resort
spring.datasource.username=postgres
spring.datasource.password=postgres

# disable Hibernate DDL generation because the schema will be generated from a sql script
spring.jpa.hibernate.ddl-auto=none

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

#Batching
spring.jpa.properties.hibernate.jdbc.batch_size=5
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create

kafka.original-image-resize-producer.server-address=127.0.0.1:9092
kafka.original-image-resize-producer.topic=original_image_resize_1

spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

img.folder = /home/amir/projects/vdomikah/spring_version/imagestest/
img.folder.extrasmall = ${img.folder}95x65/
img.folder.small = ${img.folder}160x120/
img.folder.medium = ${img.folder}400x300/
img.folder.big = ${img.folder}600x450/
img.folder.full = ${img.folder}1200x900/
img.folder.original = ${img.folder}original/


